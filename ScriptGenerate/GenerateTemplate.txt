using UnityEngine;
using System;
using System.Collections.Generic;
using Config.ConfigCore;
namespace SuperHero.Config
{
	[@CustomClass]
	{
		public class {@Class}
		{
		    [@NestedField]{private {@Type} m{@Name};}
			[@NestedProperty]
			{
				public {@Type} {@Name}
				{
					get{ return m{@Name}; }
					set{ m{@Name} = value; }
				}
			}
		}
	}
	[@CoreClass]
	{
		public class {@Class}Property
		{
			[@Field]{private {@Type} m{@Name};}
			[@Property]
			{
				public {@Type} {@Name}
				{
					get{ return m{@Name}; }
					set{ m{@Name} = value; }
				}
			}

			public static {@Class}Property Read({@KeyType} id)
			{
				var config = {@Class}.Instance.Config;
				int count = config.Count;
				for(int i = 0; i < count; i++)
				{
					if(config[i].Id == id)
					{
						return config[i];
					}
				}
				return null;
			}
		}
	}
	[@ScriptableObject]
	{
		public class {@Class} : ConfigAssetBase<{@Class},{@Class}Property>
		{
			private static string Path = "ConfigAssets/{@Class}";
		}
	}
}